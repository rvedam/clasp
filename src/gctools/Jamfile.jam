
local dir = $(__file__:D) ;

#
#
project internals/gctools : requirements
	<cxxflags>-std=c++11
#	<cxxflags>-Wc++11-extensions
	<cxxflags>-Wno-unused-variable
	<cxxflags>-Wno-c++11-extensions
	# copied from clasp - I have to come up with a better way
#	<target-os>darwin:<linkflags>"-lclang -lclangRewriteFrontend -lclangRewriteCore -lclangTooling -lclangParse -lclangDriver -lclangEdit -lclangSema -lclangAnalysis -lclangSerialization -lclangLex -lclangFrontend -lclangAST -lclangASTMatchers -lclangBasic"
 	<define>EXPAT
	<define>_DEBUG
	<define>_GNU_SOURCE
	<toolset>darwin:<define>READLINE
	<threading>single
	<include>$(MPS-SRC)
	<toolset>darwin:<define>darwin
	<toolset>darwin:<cxxflags>"-Wno-unused-variable"
	<toolset>darwin:<linkflags>"-framework IOKit -framework Carbon -framework Cocoa -framework System -framework OpenGL -framework Glut -framework AGL -L/usr/local/lib/x86_64 -lgomp"
	<toolset>gcc:<cxxflags>"-Wno-unused-variable"
	<toolset>pathscale:<cxxflags>"-Wno-unused-variable -fopenmp"
	<toolset>pgi:<cxxflags>"-mp -gopt"
	<toolset>pgi:<linkflags>"-mp -gopt"
	<target-os>darwin:<linkflags>"-dynamiclib"
	;

alias lib_boehm : $(APPRES-LIB-COMMON-LIB)/libgc.a $(APPRES-LIB-COMMON-LIB)/libatomic_ops.a ;

alias gclib : lib_boehm : <gc>boehmdc ;

alias gclib : lib_boehm : <gc>boehm ;

alias gclib : mymps.c : <gc>mps ;

alias gclib : mymps.c : <gc>mps-prep ;

local sources =
      gc_interface.cc
      gcFunctions.cc
	gctoolsPackage.cc
        globals.cc
        gcStack.cc
        telemetry.cc
        gcalloc.cc
        gcweak.cc
	memoryManagement.cc
        ;

alias gctools : $(sources)
              ;
